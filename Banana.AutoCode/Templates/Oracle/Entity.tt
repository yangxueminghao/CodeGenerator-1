<#
//------------------------------------------------------------------------------
// <copyright file="Entity.tt">
//    Copyright (c) 2018, Joe All rights reserved.
// </copyright>
// <author>Joe</author>
// <date>2018-04-25 18:00:00</date>
//------------------------------------------------------------------------------
#>
<#@ template language="C#" hostSpecific="true" debug="false" #>
<#@ output encoding="utf-8" extension=".cs" #>
<#@ include file="../TemplateFileManager.ttinclude" #>
<# 
	CustomHost host = (CustomHost)(Host);
	Table table = host.Table;
    var manager = Manager.Create(host, GenerationEnvironment);
	manager.StartNewFile(table.DisplayName + "Entity.generated.cs", host.GetValue("OutputPath").ToString()+ "\\Entities");
#>
//------------------------------------------------------------------------------
// <copyright file="<#= table.DisplayName #>Entity.generated.cs">
//    Copyright (c) <#= DateTime.Now.ToString("yyyy") #>, All rights reserved.
// </copyright>
// <author><#= Environment.UserName #></author>
// <date><#= DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") #></date>
// <auto-generated>
//    This code was generated by AutoCode.exe
//    Template Version:20180425
//    Runtime Version:<#= Environment.Version.ToString() #>
//
//    Changes to this file may cause incorrect behavior and will be lost if
//    the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Banana.Entity
{
    using System;
    using System.Collections.Generic;
    using System.Text;

    /// <summary>
    /// <#= string.IsNullOrEmpty(table.Comment) ? string.Format("Table/View [{0}] map to [{1}] entity class", table.Name, table.DisplayName) : table.Comment #>
    /// </summary>
    public partial class <#= table.DisplayName #>
    {
	<# 
		foreach(var column in table.Columns)
		{
    #>

        /// <summary>
        /// <#= column.Comment #>
        /// </summary>
        public <#= column.TypeName #> <#= column.Name #> { get; set; }
	<#
		}
	#>      
    }
}
<# 
	manager.EndBlock(); 
	manager.Process(true);
#>